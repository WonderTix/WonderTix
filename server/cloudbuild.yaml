steps:

  # Build Docker image for server
  - name: '${_KANIKO_IMAGE}'
    id: 'build-server'
    entrypoint: 'bash'
    args: ['gcp/scripts/build-server.sh']
    env:
      - 'SHORT_SHA=${SHORT_SHA}'
    secretEnv:
      - 'ARTIFACTS'
      - 'CHECK_ARGS'
      - 'ENV'
      - 'KANIKO_CACHE'

  # Deploy server to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-server'
    entrypoint: 'bash'
    args: ['gcp/scripts/deploy-server.sh']
    env:
      - 'SHORT_SHA=${SHORT_SHA}'
    secretEnv:
      - 'ARTIFACTS'
      - 'AUTH0_URL'
      - 'CHECK_ARGS'
      - 'ENV'
      - 'FRONTEND_URL'
      - 'REGION'
      - 'ROOT_URL'
      - 'SERVER_CPU'
      - 'SERVER_MEMORY'
      - 'SERVICE_ACCOUNT'
      - 'SHOULD_SEED'
      - 'GCLOUD_KEY'
      - 'GCLOUD_BUCKET'
      - 'SQL_INSTANCE'

  # Send traffic to new revision
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'send-traffic'
    entrypoint: 'bash'
    args: ['gcp/scripts/send-traffic.sh']
    env:
      - 'IMAGE=server'
      - 'PERCENTAGE=100'
      - 'SHORT_SHA=${SHORT_SHA}'
    secretEnv:
      - 'CHECK_ARGS'
      - 'ENV'
      - 'REGION'

# Use dev, stg, or prd versions depending on ${_ENV} value from trigger
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/ARTIFACTS/versions/${_ENV}
    env: 'ARTIFACTS'
  - versionName: projects/${PROJECT_ID}/secrets/AUTH0_URL/versions/${_ENV}
    env: 'AUTH0_URL'
  - versionName: projects/${PROJECT_ID}/secrets/CHECK_ARGS/versions/${_ENV}
    env: 'CHECK_ARGS'
  - versionName: projects/${PROJECT_ID}/secrets/ENV/versions/${_ENV}
    env: 'ENV'
  - versionName: projects/${PROJECT_ID}/secrets/FRONTEND_URL/versions/${_ENV}
    env: 'FRONTEND_URL'
  - versionName: projects/${PROJECT_ID}/secrets/KANIKO_CACHE/versions/${_ENV}
    env: 'KANIKO_CACHE'
  - versionName: projects/${PROJECT_ID}/secrets/REGION/versions/${_ENV}
    env: 'REGION'
  - versionName: projects/${PROJECT_ID}/secrets/ROOT_URL/versions/${_ENV}
    env: 'ROOT_URL'
  - versionName: projects/${PROJECT_ID}/secrets/SERVER_CPU/versions/${_ENV}
    env: 'SERVER_CPU'
  - versionName: projects/${PROJECT_ID}/secrets/SERVER_MEMORY/versions/${_ENV}
    env: 'SERVER_MEMORY'
  - versionName: projects/${PROJECT_ID}/secrets/SERVICE_ACCOUNT/versions/${_ENV}
    env: 'SERVICE_ACCOUNT'
  - versionName: projects/${PROJECT_ID}/secrets/SHOULD_SEED/versions/${_ENV}
    env: 'SHOULD_SEED'
  - versionName: projects/${PROJECT_ID}/secrets/GCLOUD_KEY/versions/${_ENV}
    env: 'GCLOUD_KEY'
  - versionName: projects/${PROJECT_ID}/secrets/GCLOUD_BUCKET/versions/${_ENV}
    env: 'GCLOUD_BUCKET'
  - versionName: projects/${PROJECT_ID}/secrets/SQL_INSTANCE/versions/${_ENV}
    env: 'SQL_INSTANCE'
