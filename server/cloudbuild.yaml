steps:

  # Build Docker image for server
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-server'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build \
        -f server/Dockerfile \
        -t $${ARTIFACTS}/server-img-$${ENV}:${SHORT_SHA} \
        server
    secretEnv:
      - 'ARTIFACTS'
      - 'ENV'

  # Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-server'
    entrypoint: 'bash'
    args: ['-c', 'docker push $${ARTIFACTS}/server-img-$${ENV}:${SHORT_SHA}']
    secretEnv: 
      - 'ARTIFACTS'
      - 'ENV'

  # Deploy server to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-server'
    entrypoint: 'bash'
    args: ['scripts/deploy/server.sh']
    env:
      - 'SHORT_SHA=${SHORT_SHA}'
    secretEnv:
      - 'ARTIFACTS'
      - 'AUTH0_URL'
      - 'ENV'
      - 'FRONTEND_URL'
      - 'REGION'
      - 'ROOT_URL'
      - 'SERVER_CPU'
      - 'SERVER_MEMORY'
      - 'SERVICE_ACCOUNT'
      - 'SQL_INSTANCE'

  # Send traffic to new revision
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'send-traffic'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run services update-traffic wtix-server-$${ENV} \
        --to-revisions=wtix-server-$${ENV}-${SHORT_SHA}=100 \
        --region $${REGION}
    secretEnv:
      - 'ENV'
      - 'REGION'

# Use dev, stg, or prd versions depending on $_ENV value from trigger
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/ARTIFACTS/versions/${_ENV}
    env: 'ARTIFACTS'
  - versionName: projects/${PROJECT_ID}/secrets/AUTH0_URL/versions/${_ENV}
    env: 'AUTH0_URL'
  - versionName: projects/${PROJECT_ID}/secrets/ENV/versions/${_ENV}
    env: 'ENV'
  - versionName: projects/${PROJECT_ID}/secrets/FRONTEND_URL/versions/${_ENV}
    env: 'FRONTEND_URL'
  - versionName: projects/${PROJECT_ID}/secrets/REGION/versions/${_ENV}
    env: 'REGION'
  - versionName: projects/${PROJECT_ID}/secrets/ROOT_URL/versions/${_ENV}
    env: 'ROOT_URL'
  - versionName: projects/${PROJECT_ID}/secrets/SERVER_CPU/versions/${_ENV}
    env: 'SERVER_CPU'
  - versionName: projects/${PROJECT_ID}/secrets/SERVER_MEMORY/versions/${_ENV}
    env: 'SERVER_MEMORY'
  - versionName: projects/${PROJECT_ID}/secrets/SERVICE_ACCOUNT/versions/${_ENV}
    env: 'SERVICE_ACCOUNT'
  - versionName: projects/${PROJECT_ID}/secrets/SQL_INSTANCE/versions/${_ENV}
    env: 'SQL_INSTANCE'
