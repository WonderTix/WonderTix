steps:

  # Build server image using Dockerfile.dev
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker build -f server/Dockerfile.dev -t $$ARTIFACTS/server-img-$$ENV server']
    secretEnv: ['ARTIFACTS', 'ENV']

  # Push image to artifact registry
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker push $$ARTIFACTS/server-img-$$ENV']
    secretEnv: ['ARTIFACTS', 'ENV']

  # Deploy image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy wtix-server-$$ENV \
        --image $$ARTIFACTS/server-img-$$ENV \
        --region $$REGION \
        --platform managed \
        --memory 1Gi \
        --allow-unauthenticated \
        --min-instances 1 \
        --set-cloudsql-instances $$SQL_INSTANCE \
        --service-account $$SERVICE_ACCOUNT \
        --set-env-vars=\
        AUTH0_AUDIENCE=$$AUTH0_AUDIENCE,\
        FRONTEND_URL=$$FRONTEND_URL,\
        AUTH0_URL=$$AUTH0_URL, \
        --set-secrets=\
        AUTH0_CLIENT_SECRET=AUTH0_CLIENT_SECRET:$$ENV,\
        DATABASE_URL=DATABASE_URL:$$ENV,\
        DB_DATABASE=DB_DATABASE:$$ENV,\
        DB_HOST=DB_HOST:$$ENV,\
        DB_PASSWORD=DB_PASSWORD:$$ENV,\
        DB_PORT=DB_PORT:$$ENV,\
        DB_USER=DB_USER:$$ENV,\
        ENV=ENV:$$ENV,\
        PRIVATE_STRIPE_KEY=PRIVATE_STRIPE_KEY:$$ENV,\
        ROOT_URL=ROOT_URL:$$ENV,\
    secretEnv:
      - 'ARTIFACTS'
      - 'AUTH0_AUDIENCE'
      - 'AUTH0_URL'
      - 'ENV'
      - 'FRONTEND_URL'
      - 'REGION'
      - 'ROOT_URL'
      - 'SERVICE_ACCOUNT'
      - 'SQL_INSTANCE'

# Use dev or stg versions depending on _ENV value from trigger
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/ARTIFACTS/versions/$_ENV
    env: 'ARTIFACTS'
  - versionName: projects/$PROJECT_ID/secrets/AUTH0_AUDIENCE/versions/$_ENV
    env: 'AUTH0_AUDIENCE'
  - versionName: projects/$PROJECT_ID/secrets/AUTH0_URL/versions/$_ENV
    env: 'AUTH0_URL'
  - versionName: projects/$PROJECT_ID/secrets/ENV/versions/$_ENV
    env: 'ENV'
  - versionName: projects/$PROJECT_ID/secrets/FRONTEND_URL/versions/$_ENV
    env: 'FRONTEND_URL'
  - versionName: projects/$PROJECT_ID/secrets/REGION/versions/$_ENV
    env: 'REGION'
  - versionName: projects/$PROJECT_ID/secrets/ROOT_URL/versions/$_ENV
    env: 'ROOT_URL'
  - versionName: projects/$PROJECT_ID/secrets/SERVICE_ACCOUNT/versions/$_ENV
    env: 'SERVICE_ACCOUNT'
  - versionName: projects/$PROJECT_ID/secrets/SQL_INSTANCE/versions/$_ENV
    env: 'SQL_INSTANCE'

