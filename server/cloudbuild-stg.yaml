steps:

  # Pull the latest dev image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', "$_DEV_ARTIFACTS/server-img-dev:latest"]

  # Tag the image for stg
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', "$_DEV_ARTIFACTS/server-img-dev:latest", "$_STG_ARTIFACTS/server-img-stg"]

  # Push tagged image to stg repo
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', "$_STG_ARTIFACTS/server-img-stg"]

  # Deploy stg image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    env:
      - "ROOT_URL=$_ROOT_URL"
      - "FRONTEND_URL=$_FRONTEND_URL"
      - "AUTH0_URL=$_AUTH0_URL"
      - "AUTH0_AUDIENCE=$_AUTH0_AUDIENCE"
      - 'ENV=$_ENV'
    args:
      - 'run'
      - 'deploy'
      - 'wtix-server-stg'
      - '--image'
      - "$_STG_ARTIFACTS/server-img-stg"
      - '--region'
      - "$_GCP_REGION"
      - '--platform'
      - 'managed'
      - '--memory=1Gi'
      - '--allow-unauthenticated'
      - '--min-instances=1'
      - "--set-cloudsql-instances=$_STG_SQL_INSTANCE"
      - "--service-account=$_GCP_SERVICE_ACCOUNT"
    secretEnv:
      - 'AUTH0_CLIENT_SECRET'
      - 'DB_USER'
      - 'DB_DATABASE'
      - 'DB_PORT'
      - 'DB_HOST'
      - 'DATABASE_URL'
      - 'DB_PASSWORD'

# Use stg versions for all secrets used in deployment step
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/AUTH0_CLIENT_SECRET/versions/stg
    env: 'AUTH0_CLIENT_SECRET'
  - versionName: projects/$PROJECT_ID/secrets/DB_USER/versions/stg
    env: 'DB_USER'
  - versionName: projects/$PROJECT_ID/secrets/DB_DATABASE/versions/stg
    env: 'DB_DATABASE'
  - versionName: projects/$PROJECT_ID/secrets/DB_PORT/versions/stg
    env: 'DB_PORT'
  - versionName: projects/$PROJECT_ID/secrets/DB_HOST/versions/stg
    env: 'DB_HOST'
  - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/stg
    env: 'DATABASE_URL'
  - versionName: projects/$PROJECT_ID/secrets/DB_PASSWORD/versions/stg
    env: 'DB_PASSWORD'

