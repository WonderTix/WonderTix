steps:

  # Create the .env.dev file with environment variables
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo DB_USER=postgres >> server/.env.dev
        echo DB_PASSWORD=password >> server/.env.dev
        echo DB_DATABASE=wondertix >> server/.env.dev
        echo DB_PORT=5432 >> server/.env.dev
        echo DB_HOST=35.247.65.190 >> server/.env.dev
        echo DATABASE_URL=postgresql://postgres:password@35.247.65.190:5432/wondertix?schema=public >> server/.env.dev
        echo ROOT_URL=https://wondertix-server-s2jfqf45ha-wl.a.run.app >> server/.env.dev
        echo FRONTEND_URL=https://wondertix-client-s2jfqf45ha-wl.a.run.app >> server/.env.dev
        echo AUTH0_URL=https://wtix-dev.us.auth0.com >> server/.env.dev
        echo AUTH0_AUDIENCE=https://wondertix-server-s2jfqf45ha-wl.a.run.app >> server/.env.dev
        echo ENV=dev >> server/.env.dev

  # Build the Docker image for the server using Dockerfile.dev
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'server/Dockerfile.dev', '-t', 'us-west2-docker.pkg.dev/wondertix-394321/wondertix-cd-test-artifact-registry-repository/wondertix-server', 'server']

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-west2-docker.pkg.dev/wondertix-394321/wondertix-cd-test-artifact-registry-repository/wondertix-server']

  # Deploy the server image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'wondertix-server'
      - '--image'
      - 'us-west2-docker.pkg.dev/wondertix-394321/wondertix-cd-test-artifact-registry-repository/wondertix-server'
      - '--region'
      - 'us-west2'
      - '--platform'
      - 'managed'
      - '--memory=1Gi'
      - '--allow-unauthenticated'
      - '--min-instances=1'
      - '--set-cloudsql-instances=wondertix-394321:us-west1:wondertix-cd-test-database'
      - '--service-account=144838889706-compute@developer.gserviceaccount.com'
