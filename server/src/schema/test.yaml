openapi: 3.0.0
info:
  title: WonderTix
  contact: {}
  version: '1.0'
servers:
- url: https://localhost:8000
  variables: {}
paths:
  /api/accounts:
    get:
      tags:
      - Accounts
      summary: GET /api/accounts
      description: Gets all accounts. Alternatively, provide a username and/or is_superadmin field to filter.
      operationId: GET/api/accounts
      parameters:
      - name: username
        in: query
        description: Username to filter by
        style: form
        explode: true
        schema:
          type: string
          example: wtix
      - name: is_superadmin
        in: query
        description: is_superadmin flag to filter results
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    post:
      tags:
      - Accounts
      summary: POST /api/accounts
      operationId: POST/api/accounts
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapiaccountsRequest'
            example:
              username: testUser
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/accounts/search:
    get:
      tags:
      - Accounts
      summary: GET /api/accounts/search
      description: Searches for an account by username
      operationId: GET/api/accounts/search
      parameters:
      - name: username
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: wtix
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/accounts/4:
    get:
      tags:
      - Accounts
      summary: GET /api/accounts/{id}
      operationId: GET/api/accounts/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/accounts/{id}:
    delete:
      tags:
      - Accounts
      summary: DELETE /api/accounts/{id}
      operationId: DELETE/api/accounts/{id}
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    put:
      tags:
      - Accounts
      summary: PUT /api/accounts/{id}
      operationId: PUT/api/accounts/{id}
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/contacts:
    get:
      tags:
      - Contacts
      summary: GET /api/contacts
      operationId: GET/api/contacts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    post:
      tags:
      - Contacts
      summary: POST /api/contacts/
      operationId: POST/api/contacts/
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapicontactsRequest'
            example:
              custname: test person
              newsletter: false
              donorbadge: false
              seatingaccom: false
              vip: false
              volunteer_list: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/contacts/search:
    get:
      tags:
      - Contacts
      summary: GET /api/contacts/search?name={name}
      operationId: GET/api/contacts/search?name={name}
      parameters:
      - name: name
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: anonymous
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/contacts/0:
    get:
      tags:
      - Contacts
      summary: GET /api/contacts/{id}
      operationId: GET/api/contacts/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/contacts/{id}:
    delete:
      tags:
      - Contacts
      summary: DELETE /api/contacts/{id}
      operationId: DELETE/api/contacts/{id}
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/contacts/8206:
    put:
      tags:
      - Contacts
      summary: PUT /api/contacts/{id}
      operationId: PUT/api/contacts/{id}
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapicontactsidRequest'
            example:
              custname: updated person
              newsletter: false
              donorbadge: false
              seatingaccom: false
              vip: false
              volunteer_list: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/donations:
    get:
      tags:
      - Donations
      summary: GET /api/donations
      operationId: GET/api/donations
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    post:
      tags:
      - Donations
      summary: POST /api/donations
      operationId: POST/api/donations
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapidonationsRequest'
            example:
              donorid: '2'
              isanonymous: 'false'
              amount: '5'
              dononame: Lula Margarida
              frequency: one-time
              comments: test
              donodate: 2022-07-13
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /donations/search:
    get:
      tags:
      - Donations
      summary: GET /api/donations/search?name={name}
      operationId: GET/api/donations/search?name={name}
      parameters:
      - name: name
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Xavier Kirkland
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/donations/0:
    get:
      tags:
      - Donations
      summary: GET /api/donations/{id}
      operationId: GET/api/donations/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/donations/498:
    delete:
      tags:
      - Donations
      summary: DELETE /api/donations/{id}
      operationId: DELETE/api/donations/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/donations/4980:
    put:
      tags:
      - Donations
      summary: PUT /api/donations/{id}
      operationId: PUT/api/donations/{id}
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapidonationsidRequest'
            example:
              donorid: '4027'
              isanonymous: 'true'
              amount: '8800'
              dononame: Alexa Mcmillan
              frequency: one-time
              donodate: 2017-03-06
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /doorlist:
    get:
      tags:
      - Doorlist
      summary: GET /api/doorlist?eventinstanceid={id}
      operationId: GET/api/doorlist?eventinstanceid={id}
      parameters:
      - name: eventinstanceid
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 22
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          enum:
          - application/json
          type: string
          example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/events:
    get:
      tags:
      - Events
      summary: GET /api/events
      operationId: GET/api/events
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/events/1:
    get:
      tags:
      - Events
      summary: GET /api/events/{id}
      operationId: GET/api/events/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events/list:
    get:
      tags:
      - Events
      summary: GET /api/events/list
      operationId: GET/api/events/list
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events/search:
    get:
      tags:
      - Events
      summary: GET /api/events/search?eventName={eventName}
      operationId: GET/api/events/search?eventName={eventName}
      parameters:
      - name: eventName
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: The last cafe
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events/list/active:
    get:
      tags:
      - Events
      summary: GET /api/events/list/active
      operationId: GET/api/events/list/active
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events/checkin:
    put:
      tags:
      - Events
      summary: PUT /api/events/checkin
      operationId: PUT/api/events/checkin
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapieventscheckinRequest'
            example:
              isCheckedIn: 'true'
              ticketID: '8'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events:
    post:
      tags:
      - Events
      summary: POST /api/events
      operationId: POST/api/events
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapieventsRequest'
            example:
              eventname: dummy test
              eventdescription: asdfgadsgasljkgjkl;asdd;;;;;;;jdgjsagkjsdkjgksdjga
              imageUrl: https://www.artswest.org/wp-content/uploads/2013/08/Godspell-2-615x461.jpg
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    put:
      tags:
      - Events
      summary: PUT /api/events
      operationId: PUT/api/events
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapieventsRequest'
            example:
              id: '2'
              seasonid: 0
              eventname: Staid of Gheen
              eventdescription: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Aenean et tortor at risus viverra. Arcu non odio euismod lacinia. Faucibus scelerisque eleifend donec pretium vulputate sapien nec
              active: true
              image_url: https://www.artswest.org/wp-content/uploads/2013/08/Godspell-2-615x461.jpg
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events/9:
    delete:
      tags:
      - Events
      summary: DELETE /api/events/{id}
      operationId: DELETE/api/events/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /events/instances:
    post:
      tags:
      - Events
      summary: POST /api/events/instances
      operationId: POST/api/events/instances
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapieventsinstancesRequest'
            example:
              instances:
              - eventid: '1'
                eventdate: 2022-07-14
                starttime: 17:00:00
                totalseats: '34'
                tickettype: '0'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /api/events/instances/8:
    put:
      tags:
      - Events
      summary: PUT /api/events/instances/{id}
      operationId: PUT/api/events/instances/{id}
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PUTapieventsinstancesidRequest'
              description: ''
              example:
              - id: 200
                eventid: 8
                eventdate: 2021-01-07
                starttime: 19:00:00
                salestatus: true
                totalseats: 67
                availableseats: 1
                purchaseuri: ''
              - id: 0
                eventid: 8
                eventdate: 2021-01-07
                starttime: 19:00:00
                salestatus: true
                totalseats: 67
                availableseats: 1
                purchaseuri: ''
            example:
            - id: 200
              eventid: 8
              eventdate: 2021-01-07
              starttime: 19:00:00
              salestatus: true
              totalseats: 67
              availableseats: 1
              purchaseuri: ''
            - id: 0
              eventid: 8
              eventdate: 2021-01-07
              starttime: 19:00:00
              salestatus: true
              totalseats: 67
              availableseats: 1
              purchaseuri: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /newsletter/count:
    get:
      tags:
      - Newsletter
      summary: GET /newsletter/count
      operationId: GET/newsletter/count
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /newsletter:
    post:
      tags:
      - Newsletter
      summary: POST /api/newsletter/
      operationId: POST/api/newsletter/
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapinewsletterRequest'
            example:
              custname: John Doe
              email: abc@xyz.com
              phone: 555-555-5555
              address: 123 Main St
              news_opt: 'true'
              volunteer_opt: 'true'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    put:
      tags:
      - Newsletter
      summary: PUT /api/newsletter
      operationId: PUT/api/newsletter
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapinewsletterRequest'
            example:
              custname: John Doe
              email: abc@xyz.com
              phone: 555-555-5555
              address: 123 Main St
              news_opt: 'true'
              volunteer_opt: 'false'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /saved_reports:
    get:
      tags:
      - Saved Reports
      summary: GET /api/saved_reports (IN PROGRESS)
      operationId: GET/api/saved_reports(INPROGRESS)
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /email_subscriptions/newsletter:
    get:
      tags:
      - Subscriptions
      summary: GET /api/email_subscriptions/newsletter
      operationId: GET/api/email_subscriptions/newsletter
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /email_subscriptions/volunteers:
    get:
      tags:
      - Subscriptions
      summary: GET /api/email_subscriptions/volunteers
      operationId: GET/api/email_subscriptions/volunteers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /task_notes:
    get:
      tags:
      - Task Notes
      summary: GET /api/task_notes
      operationId: GET/api/task_notes
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    post:
      tags:
      - Task Notes
      summary: POST /api/task_notes
      operationId: POST/api/task_notes
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapitask_notesRequest'
            example:
              task_id: '1'
              notes: testing asdfgkljasdgkljasd
              date_created: 2022-07-14
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /task_notes/1:
    get:
      tags:
      - Task Notes
      summary: GET /api/task_notes/{id}
      operationId: GET/api/task_notes/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    delete:
      tags:
      - Task Notes
      summary: DELETE /api/task_notes/{id}
      operationId: DELETE/api/task_notes/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    put:
      tags:
      - Task Notes
      summary: PUT /api/task_notes/{id}
      operationId: PUT/api/task_notes/{id}
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapitask_notesidRequest'
            example:
              task_id: '1'
              notes: EDITED testing asdfgkljasdgkljasd
              date_created: 2022-07-14
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /tasks:
    get:
      tags:
      - Tasks
      summary: GET /api/tasks
      operationId: GET/api/tasks
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    post:
      tags:
      - Tasks
      summary: POST /api/tasks
      operationId: POST/api/tasks
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapitasksRequest'
            example:
              subject: test
              description: asdfasdgjkls
              status: completed
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /tasks/2:
    get:
      tags:
      - Tasks
      summary: GET /api/tasks/{id}
      operationId: GET/api/tasks/{id}
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    put:
      tags:
      - Tasks
      summary: PUT /api/tasks/{id}
      operationId: PUT/api/tasks/{id}
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTapitasksidRequest'
            example:
              subject: test
              description: EDITED asdfasdgjkls
              status: completed
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /tickets:
    get:
      tags:
      - Tickets
      summary: GET /api/tickets
      operationId: GET/api/tickets
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /tickets/types:
    get:
      tags:
      - Tickets
      summary: GET /api/tickets/types
      operationId: GET/api/tickets/types
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
    post:
      tags:
      - Tickets
      summary: POST /api/tickets/types
      operationId: POST/api/tickets/types
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTapiticketstypesRequest'
            example:
              event_instance_id: '1'
              ticket_type: '0'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /tickets/list:
    get:
      tags:
      - Tickets
      summary: GET /api/tickets/list
      operationId: GET/api/tickets/list
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /:
    get:
      tags:
      - API
      summary: Hello World
      operationId: HelloWorld
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /device/code:
    post:
      tags:
      - Misc
      summary: Get Device Code
      operationId: GetDeviceCode
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          enum:
          - application/x-www-form-urlencoded
          type: string
          example: application/x-www-form-urlencoded
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
              - audience
              - scope
              - client_id
              type: object
              properties:
                audience:
                  type: string
                scope:
                  type: string
                client_id:
                  type: string
                  example: AS2LQyRcWcpn5wkMDjmxBKouh62gYBuK
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
  /token:
    post:
      tags:
      - Misc
      summary: Get Access Token
      operationId: GetAccessToken
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          enum:
          - application/x-www-form-urlencoded
          type: string
          example: application/x-www-form-urlencoded
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
              - grant_type
              - client_id
              - client_secret
              - code
              - redirect_uri
              type: object
              properties:
                grant_type:
                  type: string
                  example: authorization_code
                client_id:
                  type: string
                  example: AS2LQyRcWcpn5wkMDjmxBKouh62gYBuK
                client_secret:
                  type: string
                  example: Db_CVjMpVBUEORwormVLK74-WYqk5wrMw_fP4CZnvyyuDgsveqWQOoSCNUZq5fmP
                code:
                  type: string
                redirect_uri:
                  type: string
                  example: https://wtix-dev.us.auth0.com/callback
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
      - url: https://localhost:8000
        variables: {}
components:
  schemas:
    POSTapiaccountsRequest:
      title: POSTapiaccountsRequest
      required:
      - username
      type: object
      properties:
        username:
          type: string
      example:
        username: testUser
    POSTapicontactsRequest:
      title: POSTapicontactsRequest
      required:
      - custname
      - newsletter
      - donorbadge
      - seatingaccom
      - vip
      - volunteer_list
      type: object
      properties:
        custname:
          type: string
        newsletter:
          type: boolean
        donorbadge:
          type: boolean
        seatingaccom:
          type: boolean
        vip:
          type: boolean
        volunteer_list:
          type: boolean
      example:
        custname: test person
        newsletter: false
        donorbadge: false
        seatingaccom: false
        vip: false
        volunteer_list: false
    PUTapicontactsidRequest:
      title: PUTapicontactsidRequest
      required:
      - custname
      - newsletter
      - donorbadge
      - seatingaccom
      - vip
      - volunteer_list
      type: object
      properties:
        custname:
          type: string
        newsletter:
          type: boolean
        donorbadge:
          type: boolean
        seatingaccom:
          type: boolean
        vip:
          type: boolean
        volunteer_list:
          type: boolean
      example:
        custname: updated person
        newsletter: false
        donorbadge: false
        seatingaccom: false
        vip: false
        volunteer_list: false
    POSTapidonationsRequest:
      title: POSTapidonationsRequest
      required:
      - donorid
      - isanonymous
      - amount
      - dononame
      - frequency
      - comments
      - donodate
      type: object
      properties:
        donorid:
          type: string
        isanonymous:
          type: string
        amount:
          type: string
        dononame:
          type: string
        frequency:
          type: string
        comments:
          type: string
        donodate:
          type: string
      example:
        donorid: '2'
        isanonymous: 'false'
        amount: '5'
        dononame: Lula Margarida
        frequency: one-time
        comments: test
        donodate: 2022-07-13
    PUTapidonationsidRequest:
      title: PUTapidonationsidRequest
      required:
      - donorid
      - isanonymous
      - amount
      - dononame
      - frequency
      - donodate
      type: object
      properties:
        donorid:
          type: string
        isanonymous:
          type: string
        amount:
          type: string
        dononame:
          type: string
        frequency:
          type: string
        donodate:
          type: string
      example:
        donorid: '4027'
        isanonymous: 'true'
        amount: '8800'
        dononame: Alexa Mcmillan
        frequency: one-time
        donodate: 2017-03-06
    PUTapieventscheckinRequest:
      title: PUTapieventscheckinRequest
      required:
      - isCheckedIn
      - ticketID
      type: object
      properties:
        isCheckedIn:
          type: string
        ticketID:
          type: string
      example:
        isCheckedIn: 'true'
        ticketID: '8'
    POSTapieventsRequest:
      title: POSTapieventsRequest
      required:
      - eventname
      - eventdescription
      - imageUrl
      type: object
      properties:
        eventname:
          type: string
        eventdescription:
          type: string
        imageUrl:
          type: string
      example:
        eventname: dummy test
        eventdescription: asdfgadsgasljkgjkl;asdd;;;;;;;jdgjsagkjsdkjgksdjga
        imageUrl: https://www.artswest.org/wp-content/uploads/2013/08/Godspell-2-615x461.jpg
    POSTapieventsinstancesRequest:
      title: POSTapieventsinstancesRequest
      required:
      - instances
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
          description: ''
      example:
        instances:
        - eventid: '1'
          eventdate: 2022-07-14
          starttime: 17:00:00
          totalseats: '34'
          tickettype: '0'
    Instance:
      title: Instance
      required:
      - eventid
      - eventdate
      - starttime
      - totalseats
      - tickettype
      type: object
      properties:
        eventid:
          type: string
        eventdate:
          type: string
        starttime:
          type: string
        totalseats:
          type: string
        tickettype:
          type: string
      example:
        eventid: '1'
        eventdate: 2022-07-14
        starttime: 17:00:00
        totalseats: '34'
        tickettype: '0'
    PUTapieventsRequest:
      title: PUTapieventsRequest
      required:
      - id
      - seasonid
      - eventname
      - eventdescription
      - active
      - image_url
      type: object
      properties:
        id:
          type: string
        seasonid:
          type: integer
          format: int32
        eventname:
          type: string
        eventdescription:
          type: string
        active:
          type: boolean
        image_url:
          type: string
      example:
        id: '2'
        seasonid: 0
        eventname: Staid of Gheen
        eventdescription: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Aenean et tortor at risus viverra. Arcu non odio euismod lacinia. Faucibus scelerisque eleifend donec pretium vulputate sapien nec
        active: true
        image_url: https://www.artswest.org/wp-content/uploads/2013/08/Godspell-2-615x461.jpg
    PUTapieventsinstancesidRequest:
      title: PUTapieventsinstancesidRequest
      required:
      - id
      - eventid
      - eventdate
      - starttime
      - salestatus
      - totalseats
      - availableseats
      - purchaseuri
      type: object
      properties:
        id:
          type: integer
          format: int32
        eventid:
          type: integer
          format: int32
        eventdate:
          type: string
        starttime:
          type: string
        salestatus:
          type: boolean
        totalseats:
          type: integer
          format: int32
        availableseats:
          type: integer
          format: int32
        purchaseuri:
          type: string
      example:
        id: 200
        eventid: 8
        eventdate: 2021-01-07
        starttime: 19:00:00
        salestatus: true
        totalseats: 67
        availableseats: 1
        purchaseuri: ''
    POSTapinewsletterRequest:
      title: POSTapinewsletterRequest
      required:
      - custname
      - email
      - phone
      - address
      - news_opt
      - volunteer_opt
      type: object
      properties:
        custname:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        news_opt:
          type: string
        volunteer_opt:
          type: string
      example:
        custname: John Doe
        email: abc@xyz.com
        phone: 555-555-5555
        address: 123 Main St
        news_opt: 'true'
        volunteer_opt: 'true'
    PUTapinewsletterRequest:
      title: PUTapinewsletterRequest
      required:
      - custname
      - email
      - phone
      - address
      - news_opt
      - volunteer_opt
      type: object
      properties:
        custname:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        news_opt:
          type: string
        volunteer_opt:
          type: string
      example:
        custname: John Doe
        email: abc@xyz.com
        phone: 555-555-5555
        address: 123 Main St
        news_opt: 'true'
        volunteer_opt: 'false'
    POSTapitask_notesRequest:
      title: POSTapitask_notesRequest
      required:
      - task_id
      - notes
      - date_created
      type: object
      properties:
        task_id:
          type: string
        notes:
          type: string
        date_created:
          type: string
      example:
        task_id: '1'
        notes: testing asdfgkljasdgkljasd
        date_created: 2022-07-14
    PUTapitask_notesidRequest:
      title: PUTapitask_notesidRequest
      required:
      - task_id
      - notes
      - date_created
      type: object
      properties:
        task_id:
          type: string
        notes:
          type: string
        date_created:
          type: string
      example:
        task_id: '1'
        notes: EDITED testing asdfgkljasdgkljasd
        date_created: 2022-07-14
    POSTapitasksRequest:
      title: POSTapitasksRequest
      required:
      - subject
      - description
      - status
      type: object
      properties:
        subject:
          type: string
        description:
          type: string
        status:
          type: string
      example:
        subject: test
        description: asdfasdgjkls
        status: completed
    PUTapitasksidRequest:
      title: PUTapitasksidRequest
      required:
      - subject
      - description
      - status
      type: object
      properties:
        subject:
          type: string
        description:
          type: string
        status:
          type: string
      example:
        subject: test
        description: EDITED asdfasdgjkls
        status: completed
    POSTapiticketstypesRequest:
      title: POSTapiticketstypesRequest
      required:
      - event_instance_id
      - ticket_type
      type: object
      properties:
        event_instance_id:
          type: string
        ticket_type:
          type: string
      example:
        event_instance_id: '1'
        ticket_type: '0'
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security:
- bearer: []
tags:
- name: Accounts
- name: Contacts
- name: Donations
- name: Doorlist
- name: Events
- name: Newsletter
- name: Saved Reports
- name: Subscriptions
- name: Task Notes
- name: Tasks
- name: Tickets
- name: API
- name: Misc
  description: ''
