steps:
  # Build the Docker image for the client
  - name: 'gcr.io/cloud-builders/docker'
<<<<<<< HEAD
    args: 
      - 'build'
      - '--build-arg'
      - 'REACT_APP_ROOT_URL=$_REACT_APP_ROOT_URL'
      - '--build-arg'
      - 'REACT_APP_AUTH0_URL=$_REACT_APP_AUTH0_URL'
      - '--build-arg'
      - 'REACT_APP_AUTH0_AUDIENCE=$_REACT_APP_AUTH0_AUDIENCE'
      - '--build-arg'
      - 'REACT_APP_API_1_URL=$_REACT_APP_API_1_URL'
      - '--build-arg'
      - 'REACT_APP_API_2_URL=$_REACT_APP_API_2_URL'
      # Add the secrets as build args
      - '--build-arg'
      - 'REACT_APP_AUTH0_CLIENT_ID'
      - '--build-arg'
      - 'REACT_APP_PUBLIC_STRIPE_KEY'
      - '--build-arg'
      - 'AUTH0_CLIENT_SECRET'
      - '-f'
      - 'client/Dockerfile.dev'
      - '-t'
      - '$_GCP_ARTIFACTS/wondertix-client'
      - 'client'
    secretEnv: ['AUTH0_CLIENT_SECRET', 'REACT_APP_AUTH0_CLIENT_ID', 'REACT_APP_PUBLIC_STRIPE_KEY']
=======
    id: 'build-client'
    entrypoint: 'bash'
    args: ['scripts/build/client.sh']
    env:
      - 'SHORT_SHA=${SHORT_SHA}'
    secretEnv:
      - 'ARTIFACTS'
      - 'AUTH0_CLIENT_ID'
      - 'AUTH0_CLIENT_SECRET'
      - 'AUTH0_URL'
      - 'ENV'
      - 'PUBLIC_STRIPE_KEY'
      - 'ROOT_URL'
>>>>>>> origin/main

  # Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
<<<<<<< HEAD
    args: ['push', '$_GCP_ARTIFACTS/wondertix-client']
=======
    id: 'push-client'
    entrypoint: 'bash'
    args: ['-c', 'docker push $${ARTIFACTS}/client-img-$${ENV}:${SHORT_SHA}']
    secretEnv:
      - 'ARTIFACTS'
      - 'ENV'
>>>>>>> origin/main

  # Deploy new client to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
<<<<<<< HEAD
    env:
      - 'ENV=dev'
    args:
      - 'run'
      - 'deploy'
      - 'wondertix-client'
      - '--image'
      - '$_GCP_ARTIFACTS/wondertix-client'
      - '--region'
      - '$_GCP_REGION'
      - '--platform'
      - 'managed'

availableSecrets:
  secretManager:
  - versionName: projects/131818279954/secrets/AUTH0_CLIENT_ID/versions/latest
    env: 'REACT_APP_AUTH0_CLIENT_ID'
  - versionName: projects/131818279954/secrets/PUBLIC_STRIPE_KEY/versions/latest
    env: 'REACT_APP_PUBLIC_STRIPE_KEY'
  - versionName: projects/131818279954/secrets/AUTH0_CLIENT_SECRET/versions/latest
    env: 'AUTH0_CLIENT_SECRET'

=======
    id: 'deploy-client'
    waitFor: ['push-client']
    entrypoint: 'bash'
    args: ['scripts/deploy/client.sh']
    env:
      - 'SHORT_SHA=${SHORT_SHA}'
    secretEnv:
      - 'ARTIFACTS'
      - 'CLIENT_CPU'
      - 'CLIENT_MEMORY'
      - 'ENV'
      - 'REGION'
      - 'SERVICE_ACCOUNT'

  # Send traffic to new client
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'send-traffic'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run services update-traffic wtix-client-$${ENV} \
        --region $${REGION} \
        --to-revisions=wtix-client-$${ENV}-${SHORT_SHA}=100
    secretEnv:
      - 'ENV'
      - 'REGION'

# Use dev, stg, or prd versions depending on $_ENV value from trigger
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/ARTIFACTS/versions/${_ENV}
    env: 'ARTIFACTS'
  - versionName: projects/${PROJECT_ID}/secrets/AUTH0_CLIENT_ID/versions/${_ENV}
    env: 'AUTH0_CLIENT_ID'
  - versionName: projects/${PROJECT_ID}/secrets/AUTH0_CLIENT_SECRET/versions/${_ENV}
    env: 'AUTH0_CLIENT_SECRET'
  - versionName: projects/${PROJECT_ID}/secrets/AUTH0_URL/versions/${_ENV}
    env: 'AUTH0_URL'
  - versionName: projects/${PROJECT_ID}/secrets/CLIENT_CPU/versions/${_ENV}
    env: 'CLIENT_CPU'
  - versionName: projects/${PROJECT_ID}/secrets/CLIENT_MEMORY/versions/${_ENV}
    env: 'CLIENT_MEMORY'
  - versionName: projects/${PROJECT_ID}/secrets/ENV/versions/${_ENV}
    env: 'ENV'
  - versionName: projects/${PROJECT_ID}/secrets/PUBLIC_STRIPE_KEY/versions/${_ENV}
    env: 'PUBLIC_STRIPE_KEY'
  - versionName: projects/${PROJECT_ID}/secrets/REGION/versions/${_ENV}
    env: 'REGION'
  - versionName: projects/${PROJECT_ID}/secrets/ROOT_URL/versions/${_ENV}
    env: 'ROOT_URL'
  - versionName: projects/${PROJECT_ID}/secrets/SERVICE_ACCOUNT/versions/${_ENV}
    env: 'SERVICE_ACCOUNT'
>>>>>>> origin/main
