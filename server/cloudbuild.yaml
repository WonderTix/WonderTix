steps:
  # Build the Docker image for the server using Dockerfile.dev
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'server/Dockerfile.dev', '-t', 'us-west2-docker.pkg.dev/wondertix-394321/wondertix-cd-test-artifact-registry-repository/wondertix-server', 'server']

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-west2-docker.pkg.dev/wondertix-394321/wondertix-cd-test-artifact-registry-repository/wondertix-server']

  # Deploy the server image to Cloud Run with environment variables
  - name: 'gcr.io/cloud-builders/gcloud'
    env:
      - 'DB_USER=postgres'
      - 'DB_DATABASE=wondertix'
      - 'DB_PORT=5432'
      - 'DB_HOST=35.247.65.190'
      - 'DATABASE_URL=${{ env.DATABASE_URL }}'
      - 'ROOT_URL=https://wondertix-server-s2jfqf45ha-wl.a.run.app'
      - 'FRONTEND_URL=https://wondertix-client-s2jfqf45ha-wl.a.run.app'
      - 'AUTH0_URL=https://wtix-dev.us.auth0.com'
      - 'AUTH0_AUDIENCE=https://wondertix-server-s2jfqf45ha-wl.a.run.app'
      - 'ENV=dev'
    args:
      - 'run'
      - 'deploy'
      - 'wondertix-server'
      - '--image'
      - 'us-west2-docker.pkg.dev/wondertix-394321/wondertix-cd-test-artifact-registry-repository/wondertix-server'
      - '--region'
      - 'us-west2'
      - '--platform'
      - 'managed'
      - '--memory=1Gi'
      - '--allow-unauthenticated'
      - '--min-instances=1'
      - '--set-cloudsql-instances=wondertix-394321:us-west1:wondertix-cd-test-database'
      - '--service-account=144838889706-compute@developer.gserviceaccount.com'
