name: E2E tests after merge to main deployment
on:
  push:
    branches:
      - main

jobs:
  test-client:
    name: Run E2E tests against GCP dev
    runs-on: ubuntu-latest
    env:
      ROOT_URL: https://wtix-server-dev-3ps4rkx4ga-wl.a.run.app
      FRONTEND_URL: https://wtix-client-dev-3ps4rkx4ga-wl.a.run.app
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json
      
      - name: npm install
        run: npm install --force
        working-directory: ./client

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 6 minutes wait for deployment
        run: sleep 360s
        
      - name: Check client E2E(UI) Tests
        run: npm run test:playwright
        # run: DEBUG=pw:api npx playwright test
        working-directory: ./client
      
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./client/playwright
          retention-days: 30
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: ./client/test-results
          retention-days: 30

  # test-server:
  #   name: Run Tests on server
  #   runs-on: ubuntu-latest
  #   env:
  #     AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  #     AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  #     AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  #     AUTH0_URL: ${{ secrets.AUTH0_URL }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18.x'
  #         cache: 'npm'
  #         cache-dependency-path: ./client/package-lock.json
  #     - name: npm install
  #       run: npm install
  #       working-directory: ./server

  #     - name: Check Unit Tests
  #       run: npm test
  #       working-directory: ./server
