version: '3'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.local
    ports:
      - "8000:8000"
    environment:
      DB_DATABASE: ${PG_DB}
      DB_HOST: ${PG_HOST}
      DB_PASSWORD: ${PG_PASS}
      DB_USER: ${PG_USER}
      DB_PORT: ${PG_PORT}
      PRIVATE_STRIPE_KEY: ${PRIVATE_STRIPE_KEY}
      PRIVATE_STRIPE_WEBHOOK: ${PRIVATE_STRIPE_WEBHOOK}
      FRONTEND_URL: ${FRONTEND_URL}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_URL: ${AUTH0_URL}
      DATABASE_URL: postgresql://${PG_USER}:${PG_PASS}@${PG_HOST}:${PG_PORT}/${PG_DB}?schema=public
      ROOT_URL: ${ROOT_URL}
      ENV: local
      CI: ${CI}
      SHOULD_SEED: ${SHOULD_SEED}
    volumes:
      - ./server:/usr/app
      - /usr/app/node_modules
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.local
    ports:
      - "3000:3000"
    environment:
      REACT_APP_ROOT_URL: ${ROOT_URL}
      REACT_APP_PUBLIC_STRIPE_KEY: ${PUBLIC_STRIPE_KEY}
      REACT_APP_AUTH0_URL: ${AUTH0_URL}
      REACT_APP_AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      REACT_APP_AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      REACT_APP_API_1_URL: ${ROOT_URL}/api/1
      REACT_APP_API_2_URL: ${ROOT_URL}/api/2
      ENV: local
    volumes:
      - ./client:/usr/app
      - /usr/app/node_modules
    command: npm run start:local
  database:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
