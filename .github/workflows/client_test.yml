name: Run client unit test
on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  test-client:
    name: Run client unit test
    runs-on: ubuntu-latest
    env:
      CI: true # SET CI TO TRUE FOR GITHUB ACTIONS
      PG_USER: postgres
      PG_PASS: postgres
      PG_DB: wondertix
      PG_PORT: 5432
      PG_HOST: 172.17.0.1
      PUBLIC_STRIPE_KEY: ${{ secrets.PUBLIC_STRIPE_KEY }}
      PRIVATE_STRIPE_KEY: ${{ secrets.PRIVATE_STRIPE_KEY }}
      PRIVATE_STRIPE_WEBHOOK: ${{ secrets.PRIVATE_STRIPE_WEBHOOK }}
      ROOT_URL: ${{ secrets.LOCAL_URL_ROOT_URL }}
      FRONTEND_URL: ${{ secrets.LOCAL_FRONTEND_URL }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_URL: ${{ secrets.AUTH0_URL }}
      TEST_EMAIL: ${{ secrets.TEST_EMAIL }} 
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }} 
      ENV: local
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json
      
      - name: npm install
        run: npm install --force
        working-directory: ./client
      
      - name: Install mkcert
        run: |
          sudo apt-get update
          sudo apt-get install libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert
      
      - name: Install client CA
        run: |
          mkcert -install
          mkcert localhost
        working-directory: ./client

      - name: Install server CA
        run: |
          mkcert -install
          mkcert localhost
        working-directory: ./server
        
      - name: docker setup
        run: docker-compose up -d

      - name: 90 second wait for client and server start
        run: sleep 90s
        
      - name: Check client unit Tests
        run: npm run  test
        working-directory: ./client
      
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./client/playwright
          retention-days: 30
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: ./client/test-results
          retention-days: 30